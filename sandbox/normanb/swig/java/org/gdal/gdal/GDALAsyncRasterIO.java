/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.35
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.gdal.gdal;

public class GDALAsyncRasterIO {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected GDALAsyncRasterIO(long cPtr, boolean cMemoryOwn) {
    if (cPtr == 0)
        throw new RuntimeException();
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }
  
  protected static long getCPtr(GDALAsyncRasterIO obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      gdalJNI.delete_GDALAsyncRasterIO(swigCPtr);
    }
    swigCPtr = 0;
  }

  private Object parentReference;

  protected static long getCPtrAndDisown(GDALAsyncRasterIO obj) {
    if (obj != null)
    {
        obj.swigCMemOwn= false;
        obj.parentReference = null;
    }
    return getCPtr(obj);
  }

  /* Ensure that the GC doesn't collect any parent instance set from Java */
  protected void addReference(Object reference) {
    parentReference = reference;
  }

  public boolean equals(Object obj) {
    boolean equal = false;
    if (obj instanceof GDALAsyncRasterIO)
      equal = (((GDALAsyncRasterIO)obj).swigCPtr == this.swigCPtr);
    return equal;
  }

  public int hashCode() {
     return (int)swigCPtr;
  }


  public int getXOff() {
    return gdalJNI.GDALAsyncRasterIO_XOff_get(swigCPtr, this);
  }

  public int getYOff() {
    return gdalJNI.GDALAsyncRasterIO_YOff_get(swigCPtr, this);
  }

  public int getXSize() {
    return gdalJNI.GDALAsyncRasterIO_XSize_get(swigCPtr, this);
  }

  public int getYSize() {
    return gdalJNI.GDALAsyncRasterIO_YSize_get(swigCPtr, this);
  }

  public SWIGTYPE_p_void getBuffer() {
    long cPtr = gdalJNI.GDALAsyncRasterIO_Buffer_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public int getBufferXSize() {
    return gdalJNI.GDALAsyncRasterIO_BufferXSize_get(swigCPtr, this);
  }

  public int getBufferYSize() {
    return gdalJNI.GDALAsyncRasterIO_BufferYSize_get(swigCPtr, this);
  }

  public int getBufferType() {
    return gdalJNI.GDALAsyncRasterIO_BufferType_get(swigCPtr, this);
  }

  public int getBandCount() {
    return gdalJNI.GDALAsyncRasterIO_BandCount_get(swigCPtr, this);
  }

  public int getNDataRead() {
    return gdalJNI.GDALAsyncRasterIO_NDataRead_get(swigCPtr, this);
  }

  public int getPixelSpace() {
    return gdalJNI.GDALAsyncRasterIO_PixelSpace_get(swigCPtr, this);
  }

  public int getLineSpace() {
    return gdalJNI.GDALAsyncRasterIO_LineSpace_get(swigCPtr, this);
  }

  public int getBandSpace() {
    return gdalJNI.GDALAsyncRasterIO_BandSpace_get(swigCPtr, this);
  }

  public int GetNextUpdatedRegion(boolean wait, int timeout, int[] xoff, int[] yoff, int[] buf_xsize, int[] buf_ysize) {
    return gdalJNI.GDALAsyncRasterIO_GetNextUpdatedRegion(swigCPtr, this, wait, timeout, xoff, yoff, buf_xsize, buf_ysize);
  }

  public void LockBuffer() {
    gdalJNI.GDALAsyncRasterIO_LockBuffer(swigCPtr, this);
  }

  public void UnlockBuffer() {
    gdalJNI.GDALAsyncRasterIO_UnlockBuffer(swigCPtr, this);
  }

}
