/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.35
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.gdal.gdal;

public class Dataset extends MajorObject {
  private long swigCPtr;

  protected Dataset(long cPtr, boolean cMemoryOwn) {
    super(gdalJNI.SWIGDatasetUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Dataset obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      gdalJNI.delete_Dataset(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }


  // Preferred name to match C++ API
  public int GetRasterXSize() { return getRasterXSize(); }

  // Preferred name to match C++ API
  public int GetRasterYSize() { return getRasterYSize(); }

  // Preferred name to match C++ API
  public int GetRasterCount() { return getRasterCount(); }

  public int BuildOverviews(int[] overviewlist, ProgressCallback callback) {
    return BuildOverviews(null, overviewlist, callback);
  }

  public int BuildOverviews(int[] overviewlist) {
    return BuildOverviews(null, overviewlist, null);
  }

  public java.util.Vector GetGCPs() {
      java.util.Vector gcps = new java.util.Vector();
      GetGCPs(gcps);
      return gcps;
  }
  
  public double[] GetGeoTransform() {
      double adfGeoTransform[] = new double[6];
      GetGeoTransform(adfGeoTransform);
      return adfGeoTransform;
  }

  public int getRasterXSize() {
    return gdalJNI.Dataset_RasterXSize_get(swigCPtr, this);
  }

  public int getRasterYSize() {
    return gdalJNI.Dataset_RasterYSize_get(swigCPtr, this);
  }

  public int getRasterCount() {
    return gdalJNI.Dataset_RasterCount_get(swigCPtr, this);
  }

  public Driver GetDriver() {
    long cPtr = gdalJNI.Dataset_GetDriver(swigCPtr, this);
    return (cPtr == 0) ? null : new Driver(cPtr, false);
  }

  public Band GetRasterBand(int nBand) {
    long cPtr = gdalJNI.Dataset_GetRasterBand(swigCPtr, this, nBand);
    Band ret = null;
    if (cPtr != 0) {
      ret = new Band(cPtr, false);
      ret.addReference(this);
    }
    return ret;
  }

  public String GetProjection() {
    return gdalJNI.Dataset_GetProjection(swigCPtr, this);
  }

  public String GetProjectionRef() {
    return gdalJNI.Dataset_GetProjectionRef(swigCPtr, this);
  }

  public int SetProjection(String prj) {
    return gdalJNI.Dataset_SetProjection(swigCPtr, this, prj);
  }

  public void GetGeoTransform(double[] argout) {
    gdalJNI.Dataset_GetGeoTransform(swigCPtr, this, argout);
  }

  public int SetGeoTransform(double[] argin) {
    return gdalJNI.Dataset_SetGeoTransform(swigCPtr, this, argin);
  }

  public int BuildOverviews(String resampling, int[] overviewlist, ProgressCallback callback) {
    return gdalJNI.Dataset_BuildOverviews__SWIG_0(swigCPtr, this, resampling, overviewlist, callback);
  }

  public int BuildOverviews(String resampling, int[] overviewlist) {
    return gdalJNI.Dataset_BuildOverviews__SWIG_2(swigCPtr, this, resampling, overviewlist);
  }

  public int GetGCPCount() {
    return gdalJNI.Dataset_GetGCPCount(swigCPtr, this);
  }

  public String GetGCPProjection() {
    return gdalJNI.Dataset_GetGCPProjection(swigCPtr, this);
  }

  public void GetGCPs(java.util.Vector nGCPs) {
    gdalJNI.Dataset_GetGCPs(swigCPtr, this, nGCPs);
  }

  public int SetGCPs(GCP[] nGCPs, String pszGCPProjection) {
    return gdalJNI.Dataset_SetGCPs(swigCPtr, this, nGCPs, pszGCPProjection);
  }

  public void FlushCache() {
    gdalJNI.Dataset_FlushCache(swigCPtr, this);
  }

  public int AddBand(int datatype, java.util.Vector options) {
    return gdalJNI.Dataset_AddBand__SWIG_0(swigCPtr, this, datatype, options);
  }

  public int AddBand(int datatype) {
    return gdalJNI.Dataset_AddBand__SWIG_1(swigCPtr, this, datatype);
  }

  public int AddBand() {
    return gdalJNI.Dataset_AddBand__SWIG_2(swigCPtr, this);
  }

  public int CreateMaskBand(int nFlags) {
    return gdalJNI.Dataset_CreateMaskBand(swigCPtr, this, nFlags);
  }

  public java.util.Vector GetFileList() {
    return gdalJNI.Dataset_GetFileList(swigCPtr, this);
  }

  public void EndAsyncRasterIO(GDALAsyncRasterIO ario) {
    gdalJNI.Dataset_EndAsyncRasterIO(swigCPtr, this, GDALAsyncRasterIO.getCPtr(ario), ario);
  }

  public int ReadRaster_Direct(int xoff, int yoff, int xsize, int ysize, int buf_xsize, int buf_ysize, int buf_type, java.nio.ByteBuffer nioBuffer, int[] band_list, int nPixelSpace, int nLineSpace, int nBandSpace) {
    return gdalJNI.Dataset_ReadRaster_Direct__SWIG_0(swigCPtr, this, xoff, yoff, xsize, ysize, buf_xsize, buf_ysize, buf_type, nioBuffer, band_list, nPixelSpace, nLineSpace, nBandSpace);
  }

  public int ReadRaster_Direct(int xoff, int yoff, int xsize, int ysize, int buf_xsize, int buf_ysize, int buf_type, java.nio.ByteBuffer nioBuffer, int[] band_list, int nPixelSpace, int nLineSpace) {
    return gdalJNI.Dataset_ReadRaster_Direct__SWIG_1(swigCPtr, this, xoff, yoff, xsize, ysize, buf_xsize, buf_ysize, buf_type, nioBuffer, band_list, nPixelSpace, nLineSpace);
  }

  public int ReadRaster_Direct(int xoff, int yoff, int xsize, int ysize, int buf_xsize, int buf_ysize, int buf_type, java.nio.ByteBuffer nioBuffer, int[] band_list, int nPixelSpace) {
    return gdalJNI.Dataset_ReadRaster_Direct__SWIG_2(swigCPtr, this, xoff, yoff, xsize, ysize, buf_xsize, buf_ysize, buf_type, nioBuffer, band_list, nPixelSpace);
  }

  public int ReadRaster_Direct(int xoff, int yoff, int xsize, int ysize, int buf_xsize, int buf_ysize, int buf_type, java.nio.ByteBuffer nioBuffer, int[] band_list) {
    return gdalJNI.Dataset_ReadRaster_Direct__SWIG_3(swigCPtr, this, xoff, yoff, xsize, ysize, buf_xsize, buf_ysize, buf_type, nioBuffer, band_list);
  }

  public int WriteRaster_Direct(int xoff, int yoff, int xsize, int ysize, int buf_xsize, int buf_ysize, int buf_type, java.nio.ByteBuffer nioBuffer, int[] band_list, int nPixelSpace, int nLineSpace, int nBandSpace) {
    return gdalJNI.Dataset_WriteRaster_Direct__SWIG_0(swigCPtr, this, xoff, yoff, xsize, ysize, buf_xsize, buf_ysize, buf_type, nioBuffer, band_list, nPixelSpace, nLineSpace, nBandSpace);
  }

  public int WriteRaster_Direct(int xoff, int yoff, int xsize, int ysize, int buf_xsize, int buf_ysize, int buf_type, java.nio.ByteBuffer nioBuffer, int[] band_list, int nPixelSpace, int nLineSpace) {
    return gdalJNI.Dataset_WriteRaster_Direct__SWIG_1(swigCPtr, this, xoff, yoff, xsize, ysize, buf_xsize, buf_ysize, buf_type, nioBuffer, band_list, nPixelSpace, nLineSpace);
  }

  public int WriteRaster_Direct(int xoff, int yoff, int xsize, int ysize, int buf_xsize, int buf_ysize, int buf_type, java.nio.ByteBuffer nioBuffer, int[] band_list, int nPixelSpace) {
    return gdalJNI.Dataset_WriteRaster_Direct__SWIG_2(swigCPtr, this, xoff, yoff, xsize, ysize, buf_xsize, buf_ysize, buf_type, nioBuffer, band_list, nPixelSpace);
  }

  public int WriteRaster_Direct(int xoff, int yoff, int xsize, int ysize, int buf_xsize, int buf_ysize, int buf_type, java.nio.ByteBuffer nioBuffer, int[] band_list) {
    return gdalJNI.Dataset_WriteRaster_Direct__SWIG_3(swigCPtr, this, xoff, yoff, xsize, ysize, buf_xsize, buf_ysize, buf_type, nioBuffer, band_list);
  }

  public GDALAsyncRasterIO BeginAsyncRasterIO_Direct(int xoff, int yoff, int xsize, int ysize, int buf_xsize, int buf_ysize, int buf_type, java.nio.ByteBuffer nioBuffer, int[] band_list, int nPixelSpace, int nLineSpace, int nBandSpace, java.util.Vector options) {
    long cPtr = gdalJNI.Dataset_BeginAsyncRasterIO_Direct__SWIG_0(swigCPtr, this, xoff, yoff, xsize, ysize, buf_xsize, buf_ysize, buf_type, nioBuffer, band_list, nPixelSpace, nLineSpace, nBandSpace, options);
    return (cPtr == 0) ? null : new GDALAsyncRasterIO(cPtr, false);
  }

  public GDALAsyncRasterIO BeginAsyncRasterIO_Direct(int xoff, int yoff, int xsize, int ysize, int buf_xsize, int buf_ysize, int buf_type, java.nio.ByteBuffer nioBuffer, int[] band_list, int nPixelSpace, int nLineSpace, int nBandSpace) {
    long cPtr = gdalJNI.Dataset_BeginAsyncRasterIO_Direct__SWIG_1(swigCPtr, this, xoff, yoff, xsize, ysize, buf_xsize, buf_ysize, buf_type, nioBuffer, band_list, nPixelSpace, nLineSpace, nBandSpace);
    return (cPtr == 0) ? null : new GDALAsyncRasterIO(cPtr, false);
  }

  public GDALAsyncRasterIO BeginAsyncRasterIO_Direct(int xoff, int yoff, int xsize, int ysize, int buf_xsize, int buf_ysize, int buf_type, java.nio.ByteBuffer nioBuffer, int[] band_list, int nPixelSpace, int nLineSpace) {
    long cPtr = gdalJNI.Dataset_BeginAsyncRasterIO_Direct__SWIG_2(swigCPtr, this, xoff, yoff, xsize, ysize, buf_xsize, buf_ysize, buf_type, nioBuffer, band_list, nPixelSpace, nLineSpace);
    return (cPtr == 0) ? null : new GDALAsyncRasterIO(cPtr, false);
  }

  public GDALAsyncRasterIO BeginAsyncRasterIO_Direct(int xoff, int yoff, int xsize, int ysize, int buf_xsize, int buf_ysize, int buf_type, java.nio.ByteBuffer nioBuffer, int[] band_list, int nPixelSpace) {
    long cPtr = gdalJNI.Dataset_BeginAsyncRasterIO_Direct__SWIG_3(swigCPtr, this, xoff, yoff, xsize, ysize, buf_xsize, buf_ysize, buf_type, nioBuffer, band_list, nPixelSpace);
    return (cPtr == 0) ? null : new GDALAsyncRasterIO(cPtr, false);
  }

  public GDALAsyncRasterIO BeginAsyncRasterIO_Direct(int xoff, int yoff, int xsize, int ysize, int buf_xsize, int buf_ysize, int buf_type, java.nio.ByteBuffer nioBuffer, int[] band_list) {
    long cPtr = gdalJNI.Dataset_BeginAsyncRasterIO_Direct__SWIG_4(swigCPtr, this, xoff, yoff, xsize, ysize, buf_xsize, buf_ysize, buf_type, nioBuffer, band_list);
    return (cPtr == 0) ? null : new GDALAsyncRasterIO(cPtr, false);
  }

}
